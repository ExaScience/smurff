trigger:
  - master
  - release-*
  - v*

variables:
  CPU_COUNT: 2

jobs:
- job: 'Ubuntu_1604_Apt'
  pool:
    vmImage: 'ubuntu-latest'

  strategy:
    maxParallel: 2
    matrix:
      Debug:
        build.type: 'Debug'
      Release:
        build.type: 'Release'
      RelNoOpenMP:
        build.type: 'RelNoOpenMP'
      RelWithDebInfo:
        build.type: 'RelWithDebInfo'

  steps:
    - script: |
        sudo add-apt-repository ppa:lkoppel/robotics
        sudo apt-get update
        sudo apt-get install -y wget ninja-build libblas-dev liblapack-dev liblapacke-dev libboost-all-dev libopenmpi-dev libeigen3-dev libhdf5-dev
        sudo apt-get clean all
      displayName: Apt install dependencies
    - script: |
        wget -O HighFive.tar.gz https://github.com/BlueBrain/HighFive/archive/v2.2.tar.gz 
        tar xzf HighFive.tar.gz 
        rm HighFive.tar.gz
        cd HighFive*
        mkdir build
        cd build 
        cmake ..
        make -j2
        sudo make install 
        cd ../..
        rm -r HighFive*
      displayName: Install HighFive
    - script: |
        mkdir build.$(build.type)
      displayName: Make Build Directory
    - task: CMake@1
      inputs:
        workingDirectory: 'build.$(build.type)'
        cmakeArgs: '-G Ninja -DCMAKE_BUILD_TYPE=$(build.type) .. -DENABLE_PYTHON=OFF -DBOOST_ROOT=/usr'
    - script: |
        cd build.$(build.type)
        ninja
      displayName: 'Run ninja'
    - script: |
        cd build.$(build.type)/bin
        ./tests
      displayName: 'Run tests'

- job: 'Conda_Linux'
  strategy:
    matrix:
      Python37:
        PYTHON_VERSION: '3.7'
      Python38:
        PYTHON_VERSION: '3.8'
      Python39:
        PYTHON_VERSION: '3.9'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: conda-steps.yml

- job: 'Conda_macOS'
  strategy:
    matrix:
      Python37:
        PYTHON_VERSION: '3.7'
      Python38:
        PYTHON_VERSION: '3.8'
      Python39:
        PYTHON_VERSION: '3.9'
  pool:
    vmImage: 'macOS-latest'
  variables:
    macOS_sdk_url: 'https://github.com/tvandera/MacOSX_SDKs/releases/download/v10.11.0.1/MacOSX10.9.sdk.tar.gz'
    macOS_sdk_filename: '$(Agent.TempDirectory)/MacOSX10.9.sdk.tar.gz'
  steps:
  - script: |
      curl -L -o $(macOS_sdk_filename) $(macOS_sdk_url)
      sudo mkdir -p /opt
      sudo tar -xzvf $(macOS_sdk_filename) -C /opt
    displayName: 'Install MacOSX10.9.sdk'
  - template: conda-steps.yml

- job: 'Conda_Windows'
  strategy:
    matrix:
      Python37:
        PYTHON_VERSION: '3.7'
      Python38:
        PYTHON_VERSION: '3.8'
      Python39:
        PYTHON_VERSION: '3.9'
  pool:
    vmImage: 'vs2017-win2016'
  steps:
    - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
      displayName: Add conda to PATH
    - script: conda create --yes --quiet --name buildEnv conda-build
      displayName: Create Anaconda environment and install conda-build
    - script: |
        call activate buildEnv
        cd conda-recipes
        conda build --python $(PYTHON_VERSION) -c vanderaa --output-folder ../conda_packages smurff
      displayName: Build using "conda build"
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'conda_packages'}


- job: linux_wheel
  strategy:
    matrix:
      Python36:
        PYTHON_VERSION: '36'
      Python37:
        PYTHON_VERSION: '37'
      Python38:
        PYTHON_VERSION: '38'
      Python39:
        PYTHON_VERSION: '39'
  variables:
    CIBW_BUILD: cp$(PYTHON_VERSION)-manylinux_x86_64
    CIBW_MANYLINUX_X86_64_IMAGE: 'vanderaa/manylinux2014_x86_64_smurff'
    CIBW_ENVIRONMENT: "CMAKE_ARGS='-DENABLE_BOOST=OFF -DENABLE_CMDLINE=OFF -DENABLE_TESTS=OFF' CPU_COUNT=$(CPU_COUNT)"
    CIBW_TEST_REQUIRES: 'pytest parameterized'
    CIBW_TEST_COMMAND: 'pytest {project}/python/test'
    CIBW_BUILD_VERBOSITY: 1
  pool: {vmImage: 'ubuntu-latest'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==1.10.0
        cibuildwheel --output-dir wheelhouse .
      displayName: "Run cibuildwheel"
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}

- job: macos_wheel
  strategy:
    matrix:
      Python36:
        PYTHON_VERSION: '36'
      Python37:
        PYTHON_VERSION: '37'
      Python38:
        PYTHON_VERSION: '38'
      Python39:
        PYTHON_VERSION: '39'

  variables:
    CIBW_BUILD: cp$(PYTHON_VERSION)-macosx_x86_64
    CIBW_ENVIRONMENT: "CMAKE_ARGS='-DENABLE_BOOST=OFF -DENABLE_CMDLINE=OFF -DENABLE_TESTS=OFF -DCMAKE_PREFIX_PATH=/usr/local/opt/lapack' CPU_COUNT=$(CPU_COUNT)"
    CIBW_TEST_REQUIRES: 'pytest parameterized'
    CIBW_TEST_COMMAND: 'pytest {project}/python/test'
    CIBW_BUILD_VERBOSITY: 1
  pool: {vmImage: 'macOS-latest'}
  steps:
    - bash: |
        brew install eigen
        brew install lapack
        brew install pybind11
        brew install ci/highfive.rb
      displayName: 'Install dependencies using HomeBrew'
    - task: UsePythonVersion@0
    - bash: |
        python3 -m pip install --upgrade pip
        pip3 install cibuildwheel==1.10.0
        cibuildwheel --output-dir wheelhouse .
      displayName: "Run cibuildwheel"
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: 'wheelhouse'}