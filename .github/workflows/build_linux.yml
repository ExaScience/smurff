name: build on linux
on:
  push:
    branches:
    - master
    - release-*
    - v*
  pull_request:
    branches:
    - master

jobs:
  Ubuntu_Latest_Apt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build.type:
        - Debug
        - Release
        - RelNoOpenMP
        - RelWithDebInfo
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0

    - name: install dependencies
      run: |-
        sudo apt-get update
        sudo apt-get install -y cmake wget ninja-build libblas-dev liblapack-dev liblapacke-dev libboost-all-dev libopenmpi-dev libeigen3-dev libhdf5-dev
        sudo apt-get clean all

    - name: Install Catch v3
      run: |
        cd /tmp
        wget -O Catch2.tar.gz https://github.com/catchorg/Catch2/archive/refs/tags/v3.6.0.tar.gz
        tar xzf Catch2.tar.gz
        rm Catch2.tar.gz
        cd Catch2*
        cmake -S . -B build  -DBUILD_TESTING=OFF
        cmake --build build
        sudo cmake --install build

    - name: Install HighFive
      run: |
        cd /tmp
        wget -O HighFive.tar.gz https://github.com/BlueBrain/HighFive/archive/v2.2.2.tar.gz
        tar xzf HighFive.tar.gz
        rm HighFive.tar.gz
        cd HighFive*
        cmake -DHIGHFIVE_EXAMPLES=OFF -DHIGHFIVE_USE_BOOST=OFF -DHIGHFIVE_UNIT_TESTS=OFF -S . -B build
        cmake --build build
        sudo cmake --install build

    - name: Run CMake
      run: |-
         cmake -S .  -B build.${{ matrix.build.type }} -DCMAKE_BUILD_TYPE=${{ matrix.build.type }} -DENABLE_PYTHON=OFF

    - name: Build
      run: |-
        cmake --build build.${{ matrix.build.type }}

    - name: Install
      run: |-
        sudo cmake --install build.${{ matrix.build.type }}

    - name: Run tests
      run: |-
        smurff --bist
